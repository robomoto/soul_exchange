<% include ./partials/header %>


<h3>Features Guide for Reviews</h3>

<p>Please <a href="/register">Sign up</a>. This will create a new user in the users table, and matching soul in the Souls table.  This is your soul.  If you are bullish on souls, you may want to buy up souls.  If you're bearish on souls, you might want to sell yours a quickly as possible. At any rate, registering will bring you to the "manage" page for your account.</p>

<h4>Manage Page</h4>
From the manage page, you can:
<ul>
	<li>See your wallet balance <br>
	This is displayed from the balance field of the user table for the currently logged in account.</li>
	<li>Add funds to your wallet <br>
	This makes an UPDATE call to the user table for the currently logged in account.</li>
	<li>When you register, your soul is automatically associated with your account.  You can list it for auction, but first you have to set a Soul-Ranking:<br>
	To set your Soul Ranking, click on the "Set Soul Ranking" link and follow the instructions on the page. Once you have set your soul-ranking, you can list your soul at auction. <br>
	Setting your soul ranking updates the record for your soul in the souls table.</li>
	<li>Download a Soul Certificate <br>
	Originally, I had intended on generating a fancy PDF certificate of ownership for the owner to print and deliver to the boatman on the river styx, but that just seems like a lot of extra work--so it just gives you a voucher for one soul.</li>
	<li>List a Soul <br>
		You can list your soul at auction.  Once you've created an listing and the start date has passed, it will show up in the active listings. <br>
		Creating a listing will add a record to the listings table and the listing_details table
	</li>
	<li>See active listings <br>
		Any souls you have listed at auction will show up in their own section on the manage page. <br>
		This list is generated by a SELECT query on listings joined to listing_details and souls and filtered by owner_id matching the current logged in user.
	</li>
	<li>Pay for auctions you won <br>
		If you are high bidder at the end of an auction, you will see a list of souls that you have won that you need to pay for, along with a link to pay for them.  Note: if your wallet balance doesn't have enough funds to pay for it, you will have a link to add funds to your wallet. <br>
		This section is generated from a SELECT query on listings joined to listing_details and souls, filtered by high_bidder matching the current logged in user and the end_date of th auction occurring in the past, and the auction not yet being archived.
	</li>
</ul>
<h4>Listings</h4>
<p>The index page of the site is the list of active soul listings.  Once you are logged in, you can bid on active listings.</p>
<ul>
	<li>Clicking on an actively listing will bring you to the show route for a single listing <br>
		A Show route is generated by a SELECT statement on listings, joined to listing_details and souls, where the listing_id matches a req.params.id in the URL. 
	</li>
	<li>A number field will prepopulate with the next available bid amount, which you may override with a bid of higher value and select "Bid Now" <br>
	The value is populated from the curr_bid in the listing_details.  If curr_bid is NULL, it is populated by the min_bid field.</li>
	<li>If you are the high bidder at the end of an auction, a button to complete your purchase will appear on the manage page.</li>
</ul>

By Route:
<table>
	<tr>
		<th>
			Method&nbsp;&nbsp;&nbsp;
		</th>
		<th>Route</th>
	</tr>
<p></p>
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/register">/register</a>	
		<ul>
			<li>Status: Functional</li>
			<li>Displays a form to create a new user on "The Soul Exchange (tm)"</li>
		</ul>
			</td>
</tr>
		
<tr>
	<td valign="top">POST</td>
	<td valign="top">/register
		<ul>
			<li>Status: Functional</li>
			<li>Creates a new user in the users table and a corresponding soul in the souls table and redirects to the manage page</li>
			<li>SQL Queries:<br/></li>
			<li>//Create new user<br>
			INSERT INTO users (user_name, first_name, last_name, password) VALUES (?,?,?,?)	</li>
			<li>//Find new user's user_id<br>
			SELECT user_id, user_name FROM users WHERE user_name = ?</li>
			<li>//Create new soul entry associated with new user<br>
			INSERT INTO souls (originator_id, owner_id, soul_name) VALUES (?,?,?)</li>
		</ul>	
	</td>
</tr>
	
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/login">/login</a>	
		<ul>
			<li>Status: Functional</li>
			<li>Displays a login form</li>
		</ul>	
	</td>
</tr>

<tr>
	<td valign="top">POST</td>
	<td valign="top">/login
		<ul>
			<li>Status: Functional</li>
			<li>Creates a user session and allows access associate with a user account and redirects to the /manage route</li>
			<li>SQL Queries:<br/>
			//Find user by user_name and check password against what they entered.<br>
			SELECT user_name, user_id, password from users WHERE user_name = ?</li>
		</ul>
	</td>
</tr>
	
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/logout">/logout</a>
		<ul>
			<li>Status: Functional</li>
			<li>Destroys the user's session, redirects to the login page.</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/">/</a>
		<ul>
			<li>Status: Functional</li>
			<li>Redirects to /index</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/index">/index</a>
		<ul>
			<li>Status: Functional</li>
			<li>Lists all souls up for auction on The Soul Exchange(tm)</li>
			<li>SQL Queries:<br/>
			SELECT * FROM listings \<br>
				INNER JOIN listing_details l_d on l_d.listing_id = listings.listing_id \<br>
				INNER JOIN souls on souls.soul_id = l_d.soul_id WHERE start_datetime < ? AND end_datetime > ?;</li>
			<li></li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">GET</td>
	<td valign="top">/index/new
		<ul>
			<li>Status: Functional</li>
			<li>A form for input details of a soul listing</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">POST</td>
	<td valign="top">/index
		<ul>
			<li>Status: Functional</li>
			<li>Creates a new entry in the listings table and corresponding entry in the listing_details table.</li>
			<li>SQL Queries:<br/> 
			//create listing entry<br>
			INSERT INTO listings (seller_id, start_datetime, end_datetime) VALUES (?,?,?)<br>
			//get id of new listing<br>
			SELECT list_id from listings WHERE seller_id=? AND start_datetime=? AND end_datetime=?<br>
			//create listing_details entry<br>
			INSERT INTO listing_details (listing_id, soul_id, min_bid, description, default_img) VALUES (?,?,?,?,?)</li>
			<li>Note: Current DB setup has listing_id as primary keys for both listings and listing_details.  This probably has to change so that listing_details.listing_id is a foreign key of listings--but then I don't know how that affects it as a primary key.  We'll figure that out.</li>
		</ul>
	</td>
</tr>
	
<tr>
	<td valign="top">GET</td>
	<td valign="top">/index/:id
		<ul>
			<li>Status: Functional</li>
			<li>Displays the record of a particular Soul at auction</li>
			<li>SQL Queries:<br/>
			SELECT * FROM listings INNER JOIN listing_details ld on ld.listing_id = listings.listing_id INNER JOIN souls on souls.soul_id = ld.soul_id WHERE listing_id = ?</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">GET</td>
	<td valign="top">/index/:id/edit
		<ul>
			<li>Status: Functional</li>
			<li>Loads a form for updating the contents of a soul listing.  It will need to load the content of the record</li>
			<li>SQL Queries (TBD--but something like the following:)<br>
			SELECT * FROM listings INNER JOIN listing_details ld on ld.listing_id = listings.listing_id WHERE listing_id = ?</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">PUT</td>
	<td valign="top">/index/:id
		<ul>
			<li>Status: Functional</li>
			<li>Updates records in the listings and listing_details tables</li>
			<li>SQL Queries:<br/> (TBD)
			Likely something like:<br>
			INSERT INTO listings (start_datetime, end_datetime) VALUES (?,?)<br>
			INSERT INTO listing_details (min_bid, description, default_img) VALUES (?,?,?)</li>
		</ul>
	</td>
</tr>
		
<tr>
	<td valign="top">PUT</td>
	<td valign="top">/index/:id/bid
		<ul>
			<li>Status: functional</li>
			<li>Adds a new bid to a listing.</li>
		</ul>
	</td>
</tr>
<tr>
	<td valign="top">GET</td>
	<td valign="top"><a href="/manage">/manage</a>
		<ul>
			<li>Status: Functional/li>
			<li>Displays a list of the souls owned by a user and offers different context-based soul-management options</li>
			<li>SQL Queries:<br>
				SELECT * FROM souls INNER JOIN users on souls.owner_id = users.user_id WHERE users.user_name =?
			</li>
		</ul>
	</td>
</tr>
<tr>
	<td valign="">GET</td>
	<td valign="">/rank/:id
		<ul>
			<li>Status: Functional</li>
			<li>Displays a form for setting the ranking of your soul before listing.</li>
			<li>A soul ranking is required before you can list it for sale, and can only be done by the originator of the soul.</li>
		</ul>
	</td>
</tr>
<tr>
	<td valign="top">POST</td>
	<td valign="top">/manage
		<ul>
			<li>Status: Functional</li>
			<li>Sets the soul_score of a soul</li>
			<li>SQL Queries: <br> UPDATE souls SET soul_score = ? WHERE soul_id = ?</li>
		</ul>
	</td>
</tr>

</table> 

<p>There is more implemented that is not yet documented, but this seems like enough to go on to get an idea about the site for now.</p>



<% include ./partials/footer %>